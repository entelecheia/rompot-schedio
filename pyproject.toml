[tool.poetry]
name = "rompot-schedio"
version = "0.3.0"
description = "A Python Library for Robotic Drawings"
authors = ["Young Joon Lee <entelecheia@hotmail.com>"]
license = "MIT"
homepage = "https://rompot-schedio.entelecheia.ai"
repository = "https://github.com/entelecheia/rompot-schedio"
readme = "README.md"
packages = [{ include = "schedio", from = "src" }]

[tool.poetry.scripts]
schedio = 'schedio.__cli__:main'

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
click = "^8.1.3"
hyfi = "^1.34.1"
# flask = "1.1.2"
# imageio-ffmpeg = "0.4.3"
# itsdangerous = "2.0.1"
# pillow = "<=8.1.2"
# pyspng = "<=0.1.1"
# scikit-image = ">=0.17.2"
# tornado = "6.1"
# werkzeug = "1.0.1"
# wandb = "0.12.2"
# scikit-learn = "<1.3.0"
# psutil = "5.7.2"
# lpips = "0.1.3"
# ninja = "1.10.2"
# tensorboard = "2.4.1"
# tensorboardx = "2.1"

[tool.poetry.group.torch]
optional = true

[tool.poetry.group.torch.dependencies]
torch = {version = "^2.1.1+cu118", source = "pytorch-gpu-src"}
torchvision = {version = "^0.16.1+cu118", source = "pytorch-gpu-src"}
torchaudio = {version = "^2.1.1+cu118", source = "pytorch-gpu-src"}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^7.33.1"
isort = "^5.12.0"
black = ">=23.0.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
flake8-pyproject = "^1.2.2"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"


[[tool.poetry.source]]
name = "pytorch-gpu-src"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poe]
include = [".tasks.toml", ".tasks-extra.toml"]

[tool.black]
# 'extend-exclude' excludes files or directories in addition to the defaults
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
  _version.py
  | .refs
  | .copier-template
  | tests
  | docs
  | book
  | _build
  | node_modules
)
'''

[tool.isort]
profile = "black"
skip = [
    '_version.py',
    'node_modules',
    '_build',
    'docs',
    'tests',
    'venv',
    '.copier-template',
    '.refs',
]

[tool.flake8]
ignore = ['F401', 'E501', 'W503', 'E203']
exclude = [
    "node_modules",
    "_build",
    "docs",
    "tests",
    "venv",
    ".copier-template",
    ".refs",
    "src/forger",
    "src/thirdparty",
]
per-file-ignores = ['__init__.py:F401', '_version.py:W292']

[tool.mypy]
namespace_packages = true
exclude = [
    "node_modules",
    "build",
    "_build",
    "dist",
    "docs",
    "tests",
    "venv",
    ".copier-template",
    ".refs",
]
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = true
disallow_any_generics = false
disallow_subclassing_any = true
# platform
python_version = "3.8"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider" # deactivating pytest caching.

[tool.coverage.report]
exclude_lines = ['if __name__ == "__main__":']

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"

[tool.semantic_release]
branch = "main"
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "src/schedio/_version.py:__version__"
version_source = "tag"
commit_version_number = true                                                  # required for version_source = "tag"
commit_subject = "chore(release): :rocket: {version} [skip ci]"
prerelease_tag = "rc"
major_on_zero = true
tag_commit = true
changelog_file = "CHANGELOG.md"
upload_to_repository = false
upload_to_release = true
hvcs = "github"                                                               # hosting version control system, gitlab is also supported
build_command = "poetry build --no-cache"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
